{% extends 'base.html.twig' %}

{% block title %}Dashboard{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .stat-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            cursor: pointer;
            border: none;
            border-radius: 1rem;
        }

        .stat-card:hover {
            transform: translateY(-6px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
        }

        .stat-card .card-body {
            display: flex;
            flex-direction: column;
            justify-content: center;
            height: 130px;
        }

        .stat-card h5 {
            font-size: 1.1rem;
            font-weight: 600;
        }

        .stat-card h2 {
            font-size: 2.8rem;
            font-weight: 800;
            margin: 0;
        }

        .chart-container {
            position: relative;
            height: 320px;
            margin-bottom: 2rem;
        }

        .card-title {
            font-weight: 600;
            font-size: 1.2rem;
        }

        .card {
            border: none;
            border-radius: 1rem;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container-fluid">
        <div class="row g-4 mb-4">
            {% set colors = ['primary', 'success', 'info', 'danger', 'warning'] %}
            {% set labels = ['Tickets', 'Leads', 'Clients', 'Dépenses', 'Budgets'] %}
            {% set links = ['tickets', 'leads', 'clients', 'expenses', 'budgets'] %}
            {% set values = [stats.tickets, stats.leads, stats.clients, stats.expensesTtl, stats.budgetsTtl] %}

            {% for i in 0..4 %}
                <div class="col-md-4 col-lg-3">
                    <div class="card stat-card bg-{{ colors[i] }} text-white" onclick="window.location.href='{{ links[i] }}'">
                        <div class="card-body text-center">
                            <h5 class="card-title">{{ labels[i] }}</h5>
                            <h2 class="card-text">{{ values[i]|number_format(2, ',', ' ') }}</h2>
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>

        <div class="row g-4">
            <div class="col-md-6">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">Priorités des Tickets</h5>
                        <div class="chart-container">
                            <canvas id="ticketPrioritiesChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">Budget par Client</h5>
                        <div class="chart-container">
                            <canvas id="budgetByClientChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row g-4 mt-3">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">Dépenses vs Budget</h5>
                        <div class="chart-container">
                            <canvas id="expenseVsBudgetChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const ticketPrioritiesChart = new Chart(document.getElementById('ticketPrioritiesChart'), {
                type: 'doughnut',
                data: {
                    labels: {{ ticketPriorities|keys|json_encode|raw }},
                    datasets: [{
                        data: {{ ticketPriorities|keys|map(v => attribute(ticketPriorities, v))|json_encode|raw }},
                        backgroundColor: ['#198754', '#ffc107', '#fd7e14', '#dc3545', '#6c757d', '#9c27b0']
                    }]
                },
                options: {
                    responsive: true,
                    plugins: { legend: { position: 'bottom' } }
                }
            });

            const budgetByClientChart = new Chart(document.getElementById('budgetByClientChart'), {
                type: 'bar',
                data: {
                    labels: {{ budgetByClient|keys|json_encode|raw }},
                    datasets: [{
                        label: 'Budget',
                        data: {{ budgetByClient|keys|map(v => attribute(budgetByClient, v))|json_encode|raw }},
                        backgroundColor: '#4CAF50'
                    }]
                },
                options: {
                    responsive: true,
                    scales: { y: { beginAtZero: true } },
                    plugins: { legend: { display: false } }
                }
            });

            const expenseVsBudgetChart = new Chart(document.getElementById('expenseVsBudgetChart'), {
                type: 'line',
                data: {
                    labels: {{ expenseVsBudget|keys|json_encode|raw }},
                    datasets: [
                        {
                            label: 'Dépenses',
                            data: {{ expenseVsBudget|column('expenses')|json_encode|raw }},
                            borderColor: '#dc3545',
                            fill: false,
                            tension: 0.4
                        },
                        {
                            label: 'Budget',
                            data: {{ expenseVsBudget|column('budget')|json_encode|raw }},
                            borderColor: '#198754',
                            fill: false,
                            tension: 0.4
                        }
                    ]
                },
                options: {
                    responsive: true,
                    plugins: { legend: { position: 'bottom' } },
                    scales: {
                        y: { beginAtZero: true },
                        x: { ticks: { autoSkip: true, maxTicksLimit: 10 } }
                    }
                }
            });
        });
    </script>
{% endblock %}